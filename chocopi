#!/usr/bin/env bash

# Set default audio volume on Linux systems
if [[ "$OSTYPE" == "linux-gnu"* ]] && command -v amixer > /dev/null 2>&1; then
    DEFAULT_INPUT_VOLUME=100%
    DEFAULT_OUTPUT_VOLUME=100%
    DEFAULT_INPUT=$(amixer scontrols | grep -i -E '(capture|mic|input)' | head -1 | sed "s/.*'\([^']*\)'.*/\1/")
    DEFAULT_OUTPUT=$(amixer scontrols | grep -i -E '(master|speaker|headphone|pcm|playback)' | head -1 | sed "s/.*'\([^']*\)'.*/\1/")

    echo "üéõÔ∏è  Setting audio volume..."
    if [ -n "$DEFAULT_INPUT" ]; then
        amixer sset "$DEFAULT_INPUT" $DEFAULT_INPUT_VOLUME unmute > /dev/null 2>&1 && \
        echo "‚úÖ Set input volume: $DEFAULT_INPUT ‚Üí $DEFAULT_INPUT_VOLUME" || \
        echo "‚ö†Ô∏è  Failed to set input volume"
    else
        echo "‚ö†Ô∏è  Unable to determine default input control"
    fi

    if [ -n "$DEFAULT_OUTPUT" ]; then
        amixer sset "$DEFAULT_OUTPUT" $DEFAULT_OUTPUT_VOLUME unmute > /dev/null 2>&1 && \
        echo "‚úÖ Set output volume: $DEFAULT_OUTPUT ‚Üí $DEFAULT_OUTPUT_VOLUME" || \
        echo "‚ö†Ô∏è  Failed to set output volume"
    else
        echo "‚ö†Ô∏è  Unable to determine default output control"
    fi
fi

export PYTHONUTF8=1                       # Force UTF-8 encoding
export CHOCO_DISPLAY=${CHOCO_DISPLAY:-1}  # Enable display, default to 1 if unset
export CHOCO_LOG=${CHOCO_LOG:-DEBUG}       # Set log level, default to INFO if unset

SCRIPTPATH=$(dirname $0)
source $SCRIPTPATH/.venv/bin/activate
cd $SCRIPTPATH
python -m chocopi
